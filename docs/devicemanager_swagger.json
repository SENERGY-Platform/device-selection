{
    "swagger": "2.0",
    "info": {
        "title": "Device-Selection API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.1"
    },
    "basePath": "/",
    "paths": {
        "/bulk/selectables": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "deprecated bulk selectables",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bulk",
                    "selectables",
                    "deprecated"
                ],
                "summary": "deprecated bulk selectables",
                "parameters": [
                    {
                        "description": "BulkRequest",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BulkRequestElement"
                            }
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "adds full import-type and import path options to the result. device services are already complete, the name is a legacy artefact",
                        "name": "complete_services",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.BulkResultElement"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/bulk/selectables/combined/devices": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "returns a list of devices, that fulfill any element of the bulk-request list; include_groups and include_imports must be false",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bulk",
                    "selectables",
                    "devices"
                ],
                "summary": "bulk selectables combined devices",
                "parameters": [
                    {
                        "description": "BulkRequest",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BulkRequestElement"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.PermSearchDevice"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/device-group-helper": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "helper to create valid device-groups by providing the criteria list resulting of the supplied device-ids and a list of compatible devices, that can be added",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "device-group",
                    "helper"
                ],
                "summary": "device group helper",
                "parameters": [
                    {
                        "description": "device id list",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.DeviceGroupHelperResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/selectables": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "deprecated; finds devices, device-groups and/or imports that match all provided filter-criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "selectables",
                    "deprecated"
                ],
                "summary": "deprecated selectables",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "result should include matching device-groups",
                        "name": "include_groups",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include matching imports",
                        "name": "include_imports",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of local device ids; result devices must be in this list (if one is given)",
                        "name": "local_devices",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "adds full import-type and import path options to the result. device services are already complete, the name is a legacy artefact",
                        "name": "complete_services",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of protocol ids, that should be ignored",
                        "name": "filter_protocols",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "interaction that is not allowed in the result",
                        "name": "filter_interaction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "json encoded criteria list (model.FilterCriteriaAndSet like [{\u0026quot;function_id\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;aspect_id\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;device_class_id\u0026quot;:\u0026quot;\u0026quot;}])",
                        "name": "json",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json; base64 encoded json of criteria list",
                        "name": "base64",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "function_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "device_class_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "aspect_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.Selectable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v2/bulk/selectables": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "bulk selectables v2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bulk",
                    "selectables"
                ],
                "summary": "bulk selectables v2",
                "parameters": [
                    {
                        "description": "BulkRequestV2",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BulkRequestElementV2"
                            }
                        }
                    },
                    {
                        "type": "boolean",
                        "description": "adds full import-type and import path options to the result. device services are already complete, the name is a legacy artefact",
                        "name": "complete_services",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.BulkResultElement"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v2/query/selectables": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "finds devices, device-groups and/or imports that match all provided filter-criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "selectables"
                ],
                "summary": "selectables",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "result should include matching devices",
                        "name": "include_devices",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include matching device-groups",
                        "name": "include_groups",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include matching imports",
                        "name": "include_imports",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include all valid device id modifications",
                        "name": "include_id_modified",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "trim first element of import paths",
                        "name": "import_path_trim_first_element",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of local device ids; result devices must be in this list (if one is given)",
                        "name": "local_devices",
                        "in": "query"
                    },
                    {
                        "description": "criteria list",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/devicemodel.FilterCriteria"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.Selectable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/v2/selectables": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "finds devices, device-groups and/or imports that match all provided filter-criteria",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "selectables"
                ],
                "summary": "selectables",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "result should include matching devices",
                        "name": "include_devices",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include matching device-groups",
                        "name": "include_groups",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include matching imports",
                        "name": "include_imports",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "result should include all valid device id modifications",
                        "name": "include_id_modified",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "trim first element of import paths",
                        "name": "import_path_trim_first_element",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "comma seperated list of local device ids; result devices must be in this list (if one is given)",
                        "name": "local_devices",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "json encoded criteria list (model.FilterCriteriaAndSet like [{\u0026quot;interaction\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;function_id\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;aspect_id\u0026quot;:\u0026quot;\u0026quot;,\u0026quot;device_class_id\u0026quot;:\u0026quot;\u0026quot;}])",
                        "name": "json",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json; base64 encoded json of criteria list",
                        "name": "base64",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "interaction",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "function_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "device_class_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "alternative to json and base64 if only one filter criteria is needed",
                        "name": "aspect_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/model.Selectable"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "devicemodel.AspectNode": {
            "type": "object",
            "properties": {
                "ancestor_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "descendent_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "root_id": {
                    "type": "string"
                }
            }
        },
        "devicemodel.Configurable": {
            "type": "object",
            "properties": {
                "aspect_node": {
                    "$ref": "#/definitions/models.AspectNode"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.Type"
                },
                "value": {}
            }
        },
        "devicemodel.DeviceGroupFilterCriteria": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "device_class_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "interaction": {
                    "$ref": "#/definitions/models.Interaction"
                }
            }
        },
        "devicemodel.FilterCriteria": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "device_class_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "interaction": {
                    "type": "string"
                }
            }
        },
        "devicemodel.Interaction": {
            "type": "string",
            "enum": [
                "event",
                "request",
                "event+request",
                "event",
                "request",
                "event+request"
            ],
            "x-enum-varnames": [
                "EVENT",
                "REQUEST",
                "EVENT_AND_REQUEST"
            ]
        },
        "devicemodel.Service": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attribute"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Content"
                    }
                },
                "interaction": {
                    "$ref": "#/definitions/models.Interaction"
                },
                "local_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "outputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Content"
                    }
                },
                "protocol_id": {
                    "type": "string"
                },
                "service_group_key": {
                    "type": "string"
                }
            }
        },
        "github_com_SENERGY-Platform_device-selection_pkg_model.ImportConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "github_com_SENERGY-Platform_device-selection_pkg_model.ImportType": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ImportTypeConfig"
                    }
                },
                "default_restart": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "output": {
                    "$ref": "#/definitions/model.ImportContentVariable"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "github_com_SENERGY-Platform_device-selection_pkg_model.Type": {
            "type": "string",
            "enum": [
                "https://schema.org/Text",
                "https://schema.org/Integer",
                "https://schema.org/Float",
                "https://schema.org/Boolean",
                "https://schema.org/ItemList",
                "https://schema.org/StructuredValue"
            ],
            "x-enum-varnames": [
                "String",
                "Integer",
                "Float",
                "Boolean",
                "List",
                "Structure"
            ]
        },
        "model.BulkRequestElement": {
            "type": "object",
            "properties": {
                "criteria": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/devicemodel.FilterCriteria"
                    }
                },
                "filter_interaction": {
                    "$ref": "#/definitions/devicemodel.Interaction"
                },
                "filter_protocols": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "include_groups": {
                    "type": "boolean"
                },
                "include_imports": {
                    "type": "boolean"
                },
                "local_devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.BulkRequestElementV2": {
            "type": "object",
            "properties": {
                "criteria": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/devicemodel.FilterCriteria"
                    }
                },
                "id": {
                    "type": "string"
                },
                "import_path_trim_first_element": {
                    "type": "boolean"
                },
                "include_devices": {
                    "type": "boolean"
                },
                "include_groups": {
                    "type": "boolean"
                },
                "include_id_modified_devices": {
                    "type": "boolean"
                },
                "include_imports": {
                    "type": "boolean"
                },
                "local_devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.BulkResultElement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "selectables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Selectable"
                    }
                }
            }
        },
        "model.DeviceGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.DeviceGroupHelperResult": {
            "type": "object",
            "properties": {
                "criteria": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/devicemodel.DeviceGroupFilterCriteria"
                    }
                },
                "options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DeviceGroupOption"
                    }
                }
            }
        },
        "model.DeviceGroupOption": {
            "type": "object",
            "properties": {
                "device": {
                    "$ref": "#/definitions/model.PermSearchDevice"
                },
                "maintains_group_usability": {
                    "type": "boolean"
                },
                "removes_criteria": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/devicemodel.DeviceGroupFilterCriteria"
                    }
                }
            }
        },
        "model.Import": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.ImportConfig"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "import_type_id": {
                    "type": "string"
                },
                "kafka_topic": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "restart": {
                    "type": "boolean"
                }
            }
        },
        "model.ImportContentVariable": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sub_content_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ImportContentVariable"
                    }
                },
                "type": {
                    "$ref": "#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.Type"
                },
                "use_as_tag": {
                    "type": "boolean"
                }
            }
        },
        "model.ImportTypeConfig": {
            "type": "object",
            "properties": {
                "default_value": {},
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.Type"
                }
            }
        },
        "model.PathOption": {
            "type": "object",
            "properties": {
                "aspectNode": {
                    "$ref": "#/definitions/devicemodel.AspectNode"
                },
                "characteristicId": {
                    "type": "string"
                },
                "configurables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/devicemodel.Configurable"
                    }
                },
                "functionId": {
                    "type": "string"
                },
                "interaction": {
                    "$ref": "#/definitions/devicemodel.Interaction"
                },
                "isVoid": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.Type"
                },
                "value": {}
            }
        },
        "model.PermSearchDevice": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attribute"
                    }
                },
                "creator": {
                    "type": "string"
                },
                "device_type_id": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "local_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/model.Permissions"
                },
                "shared": {
                    "type": "boolean"
                }
            }
        },
        "model.Permissions": {
            "type": "object",
            "properties": {
                "a": {
                    "type": "boolean"
                },
                "r": {
                    "type": "boolean"
                },
                "w": {
                    "type": "boolean"
                },
                "x": {
                    "type": "boolean"
                }
            }
        },
        "model.Selectable": {
            "type": "object",
            "properties": {
                "device": {
                    "$ref": "#/definitions/model.PermSearchDevice"
                },
                "device_group": {
                    "$ref": "#/definitions/model.DeviceGroup"
                },
                "import": {
                    "$ref": "#/definitions/model.Import"
                },
                "importType": {
                    "$ref": "#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.ImportType"
                },
                "servicePathOptions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/model.PathOption"
                        }
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/devicemodel.Service"
                    }
                }
            }
        },
        "models.AspectNode": {
            "type": "object",
            "properties": {
                "ancestor_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "child_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "descendent_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "string"
                },
                "root_id": {
                    "type": "string"
                }
            }
        },
        "models.Attribute": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Content": {
            "type": "object",
            "properties": {
                "content_variable": {
                    "$ref": "#/definitions/models.ContentVariable"
                },
                "id": {
                    "type": "string"
                },
                "protocol_segment_id": {
                    "type": "string"
                },
                "serialization": {
                    "$ref": "#/definitions/models.Serialization"
                }
            }
        },
        "models.ContentVariable": {
            "type": "object",
            "properties": {
                "aspect_id": {
                    "type": "string"
                },
                "characteristic_id": {
                    "type": "string"
                },
                "function_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_void": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "omit_empty": {
                    "type": "boolean"
                },
                "serialization_options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sub_content_variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ContentVariable"
                    }
                },
                "type": {
                    "$ref": "#/definitions/models.Type"
                },
                "unit_reference": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "models.Interaction": {
            "type": "string",
            "enum": [
                "event",
                "request",
                "event+request"
            ],
            "x-enum-varnames": [
                "EVENT",
                "REQUEST",
                "EVENT_AND_REQUEST"
            ]
        },
        "models.Serialization": {
            "type": "string",
            "enum": [
                "xml",
                "json",
                "plain-text"
            ],
            "x-enum-varnames": [
                "XML",
                "JSON",
                "PlainText"
            ]
        },
        "models.Type": {
            "type": "string",
            "enum": [
                "https://schema.org/Text",
                "https://schema.org/Integer",
                "https://schema.org/Float",
                "https://schema.org/Boolean",
                "https://schema.org/ItemList",
                "https://schema.org/StructuredValue"
            ],
            "x-enum-varnames": [
                "String",
                "Integer",
                "Float",
                "Boolean",
                "List",
                "Structure"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}