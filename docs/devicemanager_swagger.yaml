basePath: /
definitions:
  devicemodel.AspectNode:
    properties:
      ancestor_ids:
        items:
          type: string
        type: array
      child_ids:
        items:
          type: string
        type: array
      descendent_ids:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      root_id:
        type: string
    type: object
  devicemodel.Configurable:
    properties:
      aspect_node:
        $ref: '#/definitions/models.AspectNode'
      characteristic_id:
        type: string
      function_id:
        type: string
      path:
        type: string
      type:
        $ref: '#/definitions/models.Type'
      value: {}
    type: object
  devicemodel.DeviceGroupFilterCriteria:
    properties:
      aspect_id:
        type: string
      device_class_id:
        type: string
      function_id:
        type: string
      interaction:
        $ref: '#/definitions/models.Interaction'
    type: object
  devicemodel.FilterCriteria:
    properties:
      aspect_id:
        type: string
      device_class_id:
        type: string
      function_id:
        type: string
      interaction:
        type: string
    type: object
  devicemodel.Interaction:
    enum:
    - event
    - request
    - event+request
    - event
    - request
    - event+request
    type: string
    x-enum-varnames:
    - EVENT
    - REQUEST
    - EVENT_AND_REQUEST
  devicemodel.Service:
    properties:
      attributes:
        items:
          $ref: '#/definitions/models.Attribute'
        type: array
      description:
        type: string
      id:
        type: string
      inputs:
        items:
          $ref: '#/definitions/models.Content'
        type: array
      interaction:
        $ref: '#/definitions/models.Interaction'
      local_id:
        type: string
      name:
        type: string
      outputs:
        items:
          $ref: '#/definitions/models.Content'
        type: array
      protocol_id:
        type: string
      service_group_key:
        type: string
    type: object
  github_com_SENERGY-Platform_device-selection_pkg_model.ImportConfig:
    properties:
      name:
        type: string
      value: {}
    type: object
  github_com_SENERGY-Platform_device-selection_pkg_model.ImportType:
    properties:
      configs:
        items:
          $ref: '#/definitions/model.ImportTypeConfig'
        type: array
      default_restart:
        type: boolean
      description:
        type: string
      id:
        type: string
      image:
        type: string
      name:
        type: string
      output:
        $ref: '#/definitions/model.ImportContentVariable'
      owner:
        type: string
    type: object
  github_com_SENERGY-Platform_device-selection_pkg_model.Type:
    enum:
    - https://schema.org/Text
    - https://schema.org/Integer
    - https://schema.org/Float
    - https://schema.org/Boolean
    - https://schema.org/ItemList
    - https://schema.org/StructuredValue
    type: string
    x-enum-varnames:
    - String
    - Integer
    - Float
    - Boolean
    - List
    - Structure
  model.BulkRequestElement:
    properties:
      criteria:
        items:
          $ref: '#/definitions/devicemodel.FilterCriteria'
        type: array
      filter_interaction:
        $ref: '#/definitions/devicemodel.Interaction'
      filter_protocols:
        items:
          type: string
        type: array
      id:
        type: string
      include_groups:
        type: boolean
      include_imports:
        type: boolean
      local_devices:
        items:
          type: string
        type: array
    type: object
  model.BulkRequestElementV2:
    properties:
      criteria:
        items:
          $ref: '#/definitions/devicemodel.FilterCriteria'
        type: array
      devices:
        items:
          type: string
        type: array
      filter_by_device_attribute_keys:
        items:
          type: string
        type: array
      id:
        type: string
      import_path_trim_first_element:
        type: boolean
      include_devices:
        type: boolean
      include_groups:
        type: boolean
      include_id_modified_devices:
        type: boolean
      include_imports:
        type: boolean
      local_device_owner:
        type: string
      local_devices:
        items:
          type: string
        type: array
    type: object
  model.BulkResultElement:
    properties:
      id:
        type: string
      selectables:
        items:
          $ref: '#/definitions/model.Selectable'
        type: array
    type: object
  model.DeviceGroup:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  model.DeviceGroupHelperResult:
    properties:
      criteria:
        items:
          $ref: '#/definitions/devicemodel.DeviceGroupFilterCriteria'
        type: array
      options:
        items:
          $ref: '#/definitions/model.DeviceGroupOption'
        type: array
    type: object
  model.DeviceGroupOption:
    properties:
      device:
        $ref: '#/definitions/model.PermSearchDevice'
      maintains_group_usability:
        type: boolean
      removes_criteria:
        items:
          $ref: '#/definitions/devicemodel.DeviceGroupFilterCriteria'
        type: array
    type: object
  model.Import:
    properties:
      configs:
        items:
          $ref: '#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.ImportConfig'
        type: array
      id:
        type: string
      image:
        type: string
      import_type_id:
        type: string
      kafka_topic:
        type: string
      name:
        type: string
      restart:
        type: boolean
    type: object
  model.ImportContentVariable:
    properties:
      aspect_id:
        type: string
      characteristic_id:
        type: string
      function_id:
        type: string
      name:
        type: string
      sub_content_variables:
        items:
          $ref: '#/definitions/model.ImportContentVariable'
        type: array
      type:
        $ref: '#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.Type'
      use_as_tag:
        type: boolean
    type: object
  model.ImportTypeConfig:
    properties:
      default_value: {}
      description:
        type: string
      name:
        type: string
      type:
        $ref: '#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.Type'
    type: object
  model.PathOption:
    properties:
      aspectNode:
        $ref: '#/definitions/devicemodel.AspectNode'
      characteristicId:
        type: string
      configurables:
        items:
          $ref: '#/definitions/devicemodel.Configurable'
        type: array
      functionId:
        type: string
      interaction:
        $ref: '#/definitions/devicemodel.Interaction'
      isVoid:
        type: boolean
      path:
        type: string
      type:
        $ref: '#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.Type'
      value: {}
    type: object
  model.PermSearchDevice:
    properties:
      attributes:
        items:
          $ref: '#/definitions/models.Attribute'
        type: array
      creator:
        type: string
      device_type_id:
        type: string
      display_name:
        type: string
      id:
        type: string
      local_id:
        type: string
      name:
        type: string
      owner_id:
        type: string
      permissions:
        $ref: '#/definitions/model.Permissions'
      shared:
        type: boolean
    type: object
  model.Permissions:
    properties:
      a:
        type: boolean
      r:
        type: boolean
      w:
        type: boolean
      x:
        type: boolean
    type: object
  model.Selectable:
    properties:
      device:
        $ref: '#/definitions/model.PermSearchDevice'
      device_group:
        $ref: '#/definitions/model.DeviceGroup'
      import:
        $ref: '#/definitions/model.Import'
      importType:
        $ref: '#/definitions/github_com_SENERGY-Platform_device-selection_pkg_model.ImportType'
      servicePathOptions:
        additionalProperties:
          items:
            $ref: '#/definitions/model.PathOption'
          type: array
        type: object
      services:
        items:
          $ref: '#/definitions/devicemodel.Service'
        type: array
    type: object
  models.AspectNode:
    properties:
      ancestor_ids:
        items:
          type: string
        type: array
      child_ids:
        items:
          type: string
        type: array
      descendent_ids:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
      parent_id:
        type: string
      root_id:
        type: string
    type: object
  models.Attribute:
    properties:
      key:
        type: string
      origin:
        type: string
      value:
        type: string
    type: object
  models.Content:
    properties:
      content_variable:
        $ref: '#/definitions/models.ContentVariable'
      id:
        type: string
      protocol_segment_id:
        type: string
      serialization:
        $ref: '#/definitions/models.Serialization'
    type: object
  models.ContentVariable:
    properties:
      aspect_id:
        type: string
      characteristic_id:
        type: string
      function_id:
        type: string
      id:
        type: string
      is_void:
        type: boolean
      name:
        type: string
      omit_empty:
        type: boolean
      serialization_options:
        items:
          type: string
        type: array
      sub_content_variables:
        items:
          $ref: '#/definitions/models.ContentVariable'
        type: array
      type:
        $ref: '#/definitions/models.Type'
      unit_reference:
        type: string
      value: {}
    type: object
  models.Interaction:
    enum:
    - event
    - request
    - event+request
    type: string
    x-enum-varnames:
    - EVENT
    - REQUEST
    - EVENT_AND_REQUEST
  models.Serialization:
    enum:
    - xml
    - json
    - plain-text
    type: string
    x-enum-varnames:
    - XML
    - JSON
    - PlainText
  models.Type:
    enum:
    - https://schema.org/Text
    - https://schema.org/Integer
    - https://schema.org/Float
    - https://schema.org/Boolean
    - https://schema.org/ItemList
    - https://schema.org/StructuredValue
    type: string
    x-enum-varnames:
    - String
    - Integer
    - Float
    - Boolean
    - List
    - Structure
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Device-Selection API
  version: "0.1"
paths:
  /bulk/selectables:
    post:
      consumes:
      - application/json
      description: deprecated bulk selectables
      parameters:
      - description: BulkRequest
        in: body
        name: message
        required: true
        schema:
          items:
            $ref: '#/definitions/model.BulkRequestElement'
          type: array
      - description: adds full import-type and import path options to the result.
          device services are already complete, the name is a legacy artefact
        in: query
        name: complete_services
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.BulkResultElement'
              type: array
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deprecated bulk selectables
      tags:
      - bulk
      - selectables
      - deprecated
  /bulk/selectables/combined/devices:
    post:
      consumes:
      - application/json
      description: returns a list of devices, that fulfill any element of the bulk-request
        list; include_groups and include_imports must be false
      parameters:
      - description: BulkRequest
        in: body
        name: message
        required: true
        schema:
          items:
            $ref: '#/definitions/model.BulkRequestElement'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.PermSearchDevice'
              type: array
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: bulk selectables combined devices
      tags:
      - bulk
      - selectables
      - devices
  /device-group-helper:
    post:
      consumes:
      - application/json
      description: helper to create valid device-groups by providing the criteria
        list resulting of the supplied device-ids and a list of compatible devices,
        that can be added
      parameters:
      - description: device id list
        in: body
        name: message
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DeviceGroupHelperResult'
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: device group helper
      tags:
      - device-group
      - helper
  /selectables:
    get:
      description: deprecated; finds devices, device-groups and/or imports that match
        all provided filter-criteria
      parameters:
      - description: result should include matching device-groups
        in: query
        name: include_groups
        type: boolean
      - description: result should include matching imports
        in: query
        name: include_imports
        type: boolean
      - description: comma seperated list of local device ids; result devices must
          be in this list (if one is given)
        in: query
        name: local_devices
        type: string
      - description: adds full import-type and import path options to the result.
          device services are already complete, the name is a legacy artefact
        in: query
        name: complete_services
        type: boolean
      - description: comma seperated list of protocol ids, that should be ignored
        in: query
        name: filter_protocols
        type: string
      - description: interaction that is not allowed in the result
        in: query
        name: filter_interaction
        type: string
      - description: json encoded criteria list (model.FilterCriteriaAndSet like [{&quot;function_id&quot;:&quot;&quot;,&quot;aspect_id&quot;:&quot;&quot;,&quot;device_class_id&quot;:&quot;&quot;}])
        in: query
        name: json
        type: string
      - description: alternative to json; base64 encoded json of criteria list
        in: query
        name: base64
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: function_id
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: device_class_id
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: aspect_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.Selectable'
              type: array
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: deprecated selectables
      tags:
      - selectables
      - deprecated
  /v2/bulk/selectables:
    post:
      consumes:
      - application/json
      description: bulk selectables v2
      parameters:
      - description: BulkRequestV2
        in: body
        name: message
        required: true
        schema:
          items:
            $ref: '#/definitions/model.BulkRequestElementV2'
          type: array
      - description: adds full import-type and import path options to the result.
          device services are already complete, the name is a legacy artefact
        in: query
        name: complete_services
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.BulkResultElement'
              type: array
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: bulk selectables v2
      tags:
      - bulk
      - selectables
  /v2/query/selectables:
    post:
      description: finds devices, device-groups and/or imports that match all provided
        filter-criteria
      parameters:
      - description: result should include matching devices
        in: query
        name: include_devices
        type: boolean
      - description: result should include matching device-groups
        in: query
        name: include_groups
        type: boolean
      - description: result should include matching imports
        in: query
        name: include_imports
        type: boolean
      - description: result should include all valid device id modifications
        in: query
        name: include_id_modified
        type: boolean
      - description: trim first element of import paths
        in: query
        name: import_path_trim_first_element
        type: boolean
      - description: comma seperated list of device ids; result devices must be in
          this list (if one is given)
        in: query
        name: devices
        type: string
      - description: comma seperated list of local device ids; result devices must
          be in this list (if one is given)
        in: query
        name: local_devices
        type: string
      - description: used in combination with local_devices to identify devices, default
          is the requesting user
        in: query
        name: local_device_owner
        type: string
      - description: comma seperated list of attribute keys; result devices have these
          attributes (if one is given)
        in: query
        name: filter_devices_by_attr_keys
        type: string
      - description: criteria list
        in: body
        name: message
        required: true
        schema:
          items:
            $ref: '#/definitions/devicemodel.FilterCriteria'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.Selectable'
              type: array
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: selectables
      tags:
      - selectables
  /v2/selectables:
    get:
      description: finds devices, device-groups and/or imports that match all provided
        filter-criteria
      parameters:
      - description: result should include matching devices
        in: query
        name: include_devices
        type: boolean
      - description: result should include matching device-groups
        in: query
        name: include_groups
        type: boolean
      - description: result should include matching imports
        in: query
        name: include_imports
        type: boolean
      - description: result should include all valid device id modifications
        in: query
        name: include_id_modified
        type: boolean
      - description: trim first element of import paths
        in: query
        name: import_path_trim_first_element
        type: boolean
      - description: comma seperated list of device ids; result devices must be in
          this list (if one is given)
        in: query
        name: devices
        type: string
      - description: comma seperated list of local device ids; result devices must
          be in this list (if one is given)
        in: query
        name: local_devices
        type: string
      - description: used in combination with local_devices to identify devices, default
          is the requesting user
        in: query
        name: local_device_owner
        type: string
      - description: json encoded criteria list (model.FilterCriteriaAndSet like [{&quot;interaction&quot;:&quot;&quot;,&quot;function_id&quot;:&quot;&quot;,&quot;aspect_id&quot;:&quot;&quot;,&quot;device_class_id&quot;:&quot;&quot;}])
        in: query
        name: json
        type: string
      - description: alternative to json; base64 encoded json of criteria list
        in: query
        name: base64
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: interaction
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: function_id
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: device_class_id
        type: string
      - description: alternative to json and base64 if only one filter criteria is
          needed
        in: query
        name: aspect_id
        type: string
      - description: comma seperated list of attribute keys; result devices have these
          attributes (if one is given)
        in: query
        name: filter_devices_by_attr_keys
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/model.Selectable'
              type: array
            type: array
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - Bearer: []
      summary: selectables
      tags:
      - selectables
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
